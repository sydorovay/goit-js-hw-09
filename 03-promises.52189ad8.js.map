{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OADAC,QAAQC,IAAI,oBAA2CC,OAAvBP,EAAS,gBAAoBO,OAANN,EAAM,OACtD,IAAIO,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLT,EACFO,EAAQ,CAAET,WAAUC,UAEpBS,EAAO,CAAEV,WAAUC,S,GAEpBA,E,IArCMW,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,GAEQA,EAAlCC,iBAEuB,IAArBC,EAAQC,OAAOH,EAAII,OAAOC,SAASnB,MAAMoB,OACzCC,EAAOJ,OAAOH,EAAII,OAAOC,SAASE,KAAKD,OACvCE,EAASL,OAAOH,EAAII,OAAOC,SAASG,OAAOF,OAE3CG,EAAY,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAC7ByB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCrB,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAClEI,QAAQC,IAAI,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,EAEtD4B,EAAY,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAC7ByB,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAmCvB,OAAfP,EAAS,QAAYO,OAANN,EAAM,OACjEI,QAAQC,IAAI,sBAAuCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,EAGtD8B,GAAO,EAAPC,GAAO,EAAPC,OAAOC,E,IAAZ,QAAKC,EAAAC,EAAWC,MAAMd,GAAQe,OAAMC,OAAAC,cAA/BT,GAAAI,EAAAC,EAAOK,QAAAC,MAAPX,GAAO,GAAP,IAAMY,EAANR,EAAOd,MACVtB,EAAc4C,EAAI,EAAG1B,EAAQK,EAAOqB,GACjCC,MAAK,SAAAnB,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,M,OAAYuB,EAAU,CAAExB,WAAUC,S,IACpD4C,OAAM,SAAApB,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,M,OAAY4B,EAAU,CAAE7B,WAAUC,S,cAHrD+B,GAAO,EAAPC,EAAOa,C,aAAPf,GAAO,MAAPK,EAAOW,QAAPX,EAAOW,Q,YAAPf,E,MAAAC,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Імпортуємо Notiflix.\nimport Notiflix from 'notiflix';\n\n// отримуємо посилання на форму і створюємо обробник події для відправки форми.\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', evt => {\n  // Відключаємо стандартну поведінку браузера\n  evt.preventDefault();\n  // Отримуємо значення полів форми\n  const delay = Number(evt.target.elements.delay.value);\n  const step = Number(evt.target.elements.step.value);\n  const amount = Number(evt.target.elements.amount.value);\n  // Створюємо функції для обробки успішного та неуспішного виконання промісустворює обробник події для відправки форми.\n  const onSuccess = ({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  };\n  const onFailure = ({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  };\n  // Запускаємо цикл для створення та виконання промісів.\n  for (const i of Array(amount).keys()) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => onSuccess({ position, delay }))\n      .catch(({ position, delay }) => onFailure({ position, delay }));\n  }\n});\n\n// Створюємо функцію createPromise, яка приймає position - позицію промісу та delay - затримку перед виконанням промісу.\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(`Creating promise ${position} with delay ${delay}ms`);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","console","log","concat","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","target","elements","value","step","amount","onSuccess","param","$parcel$interopDefault","Notify","success","onFailure","failure","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Array","keys","Symbol","iterator","next","done","i","then","catch","err","return"],"version":3,"file":"03-promises.52189ad8.js.map"}